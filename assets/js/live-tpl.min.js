const initTemplate=(e,t,r=null,n=!1)=>{let l={};return l.rootNodeSelector=e,l.rootNode=document.querySelector(e),l.template=l.rootNode.outerHTML,l.data=t,l.localData={},l.fullRender=!0,l.invisibilityCSSClass=r,l.changeListeners=new Map,l.useWarnings=n,renderTemplate(l),l},renderTemplate=ctx=>{const TPL_FOR="tpl-for",TPL_IF="tpl-if",TPL_MODEL="tpl-model",createVDOM=e=>{const t=document.createElement("template");return t.innerHTML=e,t.content.children[0]},tryToResolveVarRef=(e,t)=>{let r=e,n=0,l="";for(;n<t.length;){let e=t[n],o=[];if(e.includes("[")){const t=e.split("[");e=t[0];for(let e=1;e<t.length;e++){indexTxt=t[e].substring(0,t[e].length-1);const r=parseInt(resolveVarRefs(indexTxt));NaN!=r&&o.push(r)}}if(!["string","number","boolean","array","object"].includes(typeof r[e]))break;r=r[e],l+=`.${e}`;for(let e=0;e<o.length;e++){const t=o[e];r=r[t],l+=`[${t}]`}n++}return r===e&&(r=void 0),{ret:r,tokens:n,name:l.substring(1)}},resolveVarRefs=e=>{let t=e;const r=[...t.matchAll(/(?:"[^"]*"|'[^']*')/g)];for(let e=0;e<r.length;e++){const n=r[e];t=t.substring(0,n.index)+" ".repeat(n[0].length)+t.substring(n.index+n[0].length)}const n=[...t.matchAll(/[a-zA-Z_$]([a-zA-Z$0-9_.-]*(\[[a-zA-Z$0-9_.-]*\])?(\.)?)*/g)];for(let t=0;t<n.length;t++){let r=n[t],l=r[0].split("."),o=tryToResolveVarRef(ctx.localData,l);if(void 0===o?.ret&&(o=tryToResolveVarRef(ctx.data,l)),void 0!==o?.ret){let t=0;for(let e=0;e<o.tokens;e++)t+=1+l[e].length;t--,e=e.substring(0,r.index)+JSON.stringify(o.ret)+e.substring(r.index+t)}}return e},evalDoubleCurlyBraces=txt=>{const doubleCurlyBracketsRegEx=/{{([^}]*)}}/g,matches=[...txt.matchAll(doubleCurlyBracketsRegEx)];for(let i=matches.length-1;i>=0;i--){const match=matches[i];let matchedExpr=match[1],matchedExprLen=matchedExpr.length;matchedExpr.startsWith("##")&&(matchedExpr=atob(matchedExpr.substring(2)));const processedExpr=resolveVarRefs(matchedExpr);try{if("i"===processedExpr)throw Exception();let evaledExpr=eval("("+processedExpr+")");"object"==typeof evaledExpr&&(evaledExpr=JSON.stringify(evaledExpr)),txt=txt.slice(0,match.index)+evaledExpr+txt.slice(match.index+4+matchedExprLen)}catch(e){txt=txt.slice(0,match.index+2)+"##"+btoa(processedExpr)+txt.slice(match.index+2+matchedExprLen)}}return txt},evalSquareBracketAttributes=e=>{const t=[...e.matchAll(/\[([^\]]*)\]="([^"]*)"/g)];for(let r=t.length-1;r>=0;r--){const n=t[r],l=n[2].trim(),o="##"+btoa(resolveVarRefs(l));e=e.slice(0,n.index+1+n[1].length+1+2)+o+e.slice(n.index+1+n[1].length+1+2+l.length)}return e},evalTplDirectivesAndAttribs=(e,t,r,n)=>{const l=new RegExp(`${TPL_FOR}="([^;]*);([^"]*)`,"g"),o=new RegExp(`^${r}(\\.|\\[)`,"g");let a=[...e.matchAll(l)];for(let r=a.length-1;r>=0;r--){const l=a[r];let s=l[1];if(s.includes("[")){let e=tryToResolveVarRef(ctx.data,s.split("."));null!=e?.ret&&(s=e?.name)}const i=o.test(s.trim())?";##"+btoa(`${t}[${n}].${s.split(".").filter(((e,t)=>t>0)).join(".")}`):";##"+btoa(s),d="##"+btoa(resolveVarRefs(s));e=e.slice(0,l.index+2+TPL_FOR.length)+d+e.slice(l.index+2+TPL_FOR.length+s.length,l.index+2+TPL_FOR.length+s.length+l[2].length+1)+i+e.slice(l.index+2+TPL_FOR.length+s.length+l[2].length+1)}const s=new RegExp(`${TPL_IF}="([^"]*)`,"g");a=[...e.matchAll(s)];for(let t=a.length-1;t>=0;t--){const r=a[t];let n=r[1];const l="##"+btoa(resolveVarRefs(n));e=e.slice(0,r.index+2+TPL_IF.length)+l+e.slice(r.index+2+TPL_IF.length+n.length)}e=evalSquareBracketAttributes(e);const i=new RegExp(`${TPL_MODEL}="([^"]*)`,"g");a=[...e.matchAll(i)];for(let l=a.length-1;l>=0;l--){const o=a[l];let s=o[1];if(s.trim()==r){const r=`${t}[${n}]`;e=e.slice(0,o.index+2+TPL_MODEL.length)+r+e.slice(o.index+2+TPL_MODEL.length+s.length)}}return e},convert=(e,t)=>"number"==typeof t?Number(e):"boolean"==typeof t?"true"==e.toLowerCase()||"1"==e||"t"==e||"y"===e:JSON.stringify(e),evalProxy=src=>function(){return eval(src)},tplModelChangeListener=e=>t=>{const r=t?.currentTarget?.value;if(null==r)return;let n=evalProxy(`this.${e}`).bind(ctx.data)();null!=n&&(evalProxy(`this.${e}=${convert(r,n)}`).bind(ctx.data)(),renderTemplate(ctx))},handleTplModel=(e,t)=>{const r=e.attributes.getNamedItem(TPL_MODEL);if(!r)return{};try{const n=r.value;t.add(n),e.attributes.removeNamedItem(TPL_MODEL);let l=ctx.changeListeners.get(n);l||(l=tplModelChangeListener(n),ctx.changeListeners.set(n,l)),e.removeEventListener("change",l),e.addEventListener("change",l),e.value=evalProxy(`this.${n}`).bind(ctx.data)()}catch(e){ctx.useWarnings}return{}},handleTplIf=node=>{const namedItem=node.attributes.getNamedItem(TPL_IF);if(!namedItem)return{};try{const val=namedItem.value.startsWith("##")?atob(namedItem.value.substring(2)):namedItem.value,evalResult=eval(resolveVarRefs(val));if(node.attributes.removeNamedItem(TPL_IF),0==evalResult)return node.parentNode.removeChild(node),{nodeRemoved:!0}}catch(e){ctx.useWarnings}return{}},handleSquareBracketAttributes=node=>{for(let i=node.attributes.length-1;i>=0;i--){const attrib=node.attributes[i],startsEndsWithBrackets=attrib.name.startsWith("[")&&attrib.name.endsWith("]");if(!startsEndsWithBrackets)continue;const attribName=attrib.name.substring(1,attrib.name.length-1);node.attributes.removeNamedItem(attrib.name);try{const val=resolveVarRefs(atob(attrib.value.substring(2)));if("i"===val)throw Exception();const evalResult=eval(val);let attribToUpdate=node.attributes[attribName]??document.createAttribute(attribName);attribToUpdate.value=evalResult,node.attributes.setNamedItem(attribToUpdate)}catch(e){ctx.useWarnings}}},handleTplFor=e=>{const t=e.attributes.getNamedItem(TPL_FOR);if(!t)return{};try{const r=t.value.split(";");let n=r[0].trim();n.startsWith("##")&&(n=atob(n.substring(2)));const l=JSON.parse(resolveVarRefs(n)),o=r[1].trim();e.attributes.removeNamedItem(TPL_FOR);const a=e.outerHTML,s=r.length>=3?atob(r[2].substring(2)):n;for(let t=0;t<l.length;t++){let r=l[t];const n={};n[o]=r,ctx.localData=n;const i=evalTplDirectivesAndAttribs(evalDoubleCurlyBraces(a),s,o,t);ctx.localData={};let d=createVDOM(i);e.parentElement.insertBefore(d,e)}return e.parentNode.removeChild(e),{nodeRemoved:!0}}catch(e){ctx.useWarnings}return{}},preProcessNodes=e=>{let t={};if(!e)return t;if(t=handleTplIf(e),t.nodeRemoved)return t;if(t=handleTplFor(e),t.nodeRemoved)return t;handleSquareBracketAttributes(e);let r=0;for(;r<e.children.length;){const t=e.children[r];preProcessNodes(t).nodeRemoved||r++}return t},postProcessNodes=(e,t)=>{let r={};if(!e)return r;if(r=handleTplModel(e,t),r.nodeRemoved)return r;let n=0;for(;n<e.children.length;){const r=e.children[n];postProcessNodes(r,t).nodeRemoved||n++}return r},removeUnreferencedChangeListenersFromCtx=e=>{const t=Array.from(e),r=Array.from(ctx.changeListeners.keys());for(const e of r)t.includes(e)||ctx.changeListeners.delete(e)},nodeType=e=>3===e.nodeType?"text":8===e.nodeType?"comment":e.nodeName,nodeContent=e=>e.childNodes?.length>0?null:e.textContent,updateAttributes=(e,t)=>{if(1!==e.nodeType||1!==t.nodeType)return;let r=e.attributes;const n=t.attributes;if(0!==r.length||0!==n.length){for(let e=0;e<r.length;e++){const t=r[e].name;void 0===n[t]&&r.removeNamedItem(t)}for(let e=0;e<n.length;e++){const t=n[e];if(void 0===r[t.name]){let e=document.createAttribute(t.name);e.value=t.value,r.setNamedItem(e)}else r[t.name].value!==t.value&&(r[t.name].value=t.value)}}},diffAndUpdate=(e,t)=>{let r=Array.prototype.slice.call(e.childNodes),n=Array.prototype.slice.call(t.childNodes);updateAttributes(e,t);let l=r.length-n.length;for(;l>0;){let e=r[r.length-l];e.parentNode.removeChild(e),l--}n.forEach(((t,n)=>{if(n>=r.length)return void e.appendChild(t.cloneNode(!0));if(nodeType(t)!==nodeType(r[n]))return void r[n].parentNode.replaceChild(t.cloneNode(!0),r[n]);const l=nodeContent(t),o=nodeContent(r[n]);l&&l!==o&&(r[n].textContent=l),updateAttributes(r[n],t),r[n].childNodes.length>0&&t.childNodes.length<1?r[n].replaceChildren():(r[n].childNodes.length<1&&t.childNodes.length>0&&r[n].append(...t.childNodes),t.childNodes.length>0&&diffAndUpdate(r[n],t))}))};let vdom=createVDOM(evalSquareBracketAttributes(evalDoubleCurlyBraces(ctx.template)));ctx.invisibilityCSSClass&&(vdom.classList.remove(ctx.invisibilityCSSClass),0==vdom.classList.length&&vdom.attributes.removeNamedItem("class")),preProcessNodes(vdom),ctx.fullRender?(ctx.rootNode.outerHTML=vdom.outerHTML,ctx.rootNode=document.querySelector(ctx.rootNodeSelector),ctx.fullRender=!1):diffAndUpdate(ctx.rootNode,vdom);let referencedTplModels=new Set;postProcessNodes(ctx.rootNode,referencedTplModels),removeUnreferencedChangeListenersFromCtx(referencedTplModels)};
